# change prefix button
unbind C-b
set -g prefix C-a
bind C-a send-prefix
bind a last-window

# vim-like pane switching
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# vim-like pane splitting
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
unbind-key %
unbind-key '"'

# unbind space (originally rearranges panes)
unbind-key space

# create window
bind c new-window -c "#{pane_current_path}"

# vim-like command line button (default)
bind : command-prompt

# vim-like controls for copy mode
setw -g mode-keys vi

# emacs-like controls in command prompt
set -g status-keys emacs

# set correct term
# TODO: but what if underlying terminal doesn't support 256 colors? getty for example
#set -g default-terminal "screen-256color"
# You have to add tmux.terminfo and tmux-256color.terminfo for this to work:
# $ cat tmux.terminfo
# tmux|tmux terminal multiplexer,
#   ritm=\E[23m, rmso=\E[27m, sitm=\E[3m, smso=\E[7m,
#   use=st-256color, use=screen-256color,
# $ cat tmux-256color.terminfo
# tmux-256color|tmux terminal multiplexer with 256color support (same as tmux now),
#   use=tmux,
# $ tic -x tmux.terminfo
# $ tic -x tmux-256color.terminfo
# Note that this is untested, some parts might not be neccessary, it just seems to work.
set -g default-terminal "tmux-256color"

# st-256color - $TERM outside of tmux
# MAGIC for 24bit color support: Tc
# MAGIC for cursor shape in nvim: Ss=\E[%p1%d q:Se=\E[2 q
# MAGIC for strikethrough text (doesn't work in terminfo): smxx=\E[9m
# !single quotes make a difference!
#set -g -a terminal-overrides ',st-256color:Tc:Ss=\E[%p1%d q:Se=\E[2 q'
set -g -a terminal-overrides ',st-256color:Tc:Ss=\E[%p1%d q:Se=\E[2 q:smxx=\E[9m'
# TODO: check if this is needed, st-256color includes these extensions
# see 'infocmp -x st-256color'

# hack for ctrl+arrow to work in tmux/st (default since 2.4)
setw -g xterm-keys on

# switch sessions (normally 's')
bind S choose-tree

# swap windows interactively
bind W choose-tree "swap-pane -t '%%'"

# reload config
bind % source-file ~/.tmux.conf \; display-message "Config reloaded!"

# monitor window activity and style
setw -g monitor-activity on

# set lowest window and pane index to 1
set -g base-index 1
setw -g pane-base-index 1

# command line history limit
set -g history-limit 50000

# colour16 is black with correct bold

# blue clock
set -g clock-mode-colour colour51

# border style
set -g pane-border-bg colour235
set -g pane-border-fg colour238
set -g pane-active-border-bg colour236
set -g pane-active-border-fg colour51

# status bar colors
set -g status-fg colour252
set -g status-bg colour234

# pane status colors
setw -g window-status-style 'fg=colour138,bg=colour236' # dim has a bug, that it starts very dim and gets brighter after a second
setw -g window-status-format ' #I#[fg=colour246]:#[fg=colour252]#W#[fg=colour246]#F '
setw -g window-status-activity-style 'fg=colour34,bold' # blink seems to work only on xterm (not st, or xfce4-terminal)

# current pane status colors
setw -g window-status-current-fg colour81
setw -g window-status-current-bg colour240
setw -g window-status-current-attr bold,underscore
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

# use ISO date format for status right
setw -g status-right '#[fg=colour250,bg=colour239,bold] %Y-%m-%d #[fg=colour254,bg=colour243,bold] %H:%M:%S '
setw -g status-left '#[fg=colour248,bg=colour236,bold] [#S] '

# status separator
setw -g window-status-separator " "

# status bar message time in ms
set -g display-time 3000

# status bar on the centre
set -g status-justify centre

# don't close pane if process is running
bind x if-shell "pgrep -P #{pane_pid}"\
    'display-message "Pane not empty!"'\
    'confirm-before -p "kill-pane #P? (y/n)" kill-pane'

# force close pane
bind X confirm-before -p "kill-pane #P? (y/n)" kill-pane

# address vim mode switching delay
set -s escape-time 0

# refresh status-left and status-right more often
set -g status-interval 1

# enable focus events for terminals which support them
set -g focus-events on

# allow two SESSIONS use different screen sizes for different WINDOWS from one WINDOW GROUP
setw -g aggressive-resize on

# use mouse to scroll and switch windows or panes
# but then you can't scroll in vim :(
#set -g mouse on
#
# TODO:
# bind PageUp copy-mode -eu

# list of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @override_copy_command 'fail-safe-copy' # silly workaround for truncation issues
# debug clipboard truncation issues - note this also causes ctrl-Y (copy pwd) to fail
#set -g @override_copy_command 'bash -c "tee >(nc 127.0.0.1 4444) | xclip -selection clipboard"'

# "set -g set-clipboard on" should be enough to support copying from tmux to
# system clipboard.
#
# It uses escape sequence 'OSC 5 2' [1] which is supported in st, but st
# buffers for escape sequences are too small for some copies and content is
# truncated [2].

# [1] https://www.xfree86.org/4.8.0/ctlseqs.html
#     https://medium.freecodecamp.org/tmux-in-practice-integration-with-system-clipboard-bcd72c62ff7b
# [2] https://github.com/jwilm/alacritty/issues/1002
#     https://github.com/tmux/tmux/issues/1119

# init tmux plugin manager
run '~/.tmux/plugins/tpm/tpm'
# prefix + I to install plugins
# prefix + U to update plugins
# prefix + alt + u to remove plugins not on the list
